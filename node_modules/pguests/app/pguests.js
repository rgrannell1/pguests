
"use strict"





const fs             = require('fs')
const events         = require('events')

const constants      = require('pguests/commons/constants')
const commons        = require('pguests/commons/commons')
const readProcFile   = require('pguests/fs/read-proc-file')
const parser         = require('pguests/commons/parser')
const connectionData = require('pguests/network/connection-data')
const reporters      = require('pguests/reporters/reporters')





const pguests = rawArgs => {

	const args     = pguests.preprocess(rawArgs)

	const conn     = connectionData( )
	const state    = {
		received: [ ]
	}

	conn.on(constants.events.socket, socket => {

		socket.timestamp = new Date( )
		state.received.push(socket)

		// TODO add live reporters! Otherwise using event emitters is insane!

	})

	if (args.timeout) {

		setTimeout(( ) => {

			reporters.reportRates(args, state.received, ( ) => {
				process.exit(0)
			})

		}, 1000 * args.timeout)

	}

	process.on(constants.signals.sigint, ( ) => {

		reporters.reportRates(args, state.received, ( ) => {
			process.exit(0)
		})

	})

}




pguests.preprocess = rawArgs => {

	return {
		timeout: parseFloat(rawArgs['--timeout'], 10)
	}

}




module.exports = pguests
