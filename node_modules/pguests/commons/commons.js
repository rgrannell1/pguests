
"use strict"





const commons = {
	async: { }
}





commons.padString = (num, str) => {

	for (var ith = str.length; ith < num; ++ith) {
		str += ' '
	}

	return str

}

commons.maxByKeys = (fn, keys, objs) => {

	return objs.map(obj => {

		var out = { }

		keys.forEach(key => {
			out[key] = Math.max( out[key], fn(obj[key]) )
		})

		return out

	})

}





commons.async.map = function (fn, data, callback, acc) {

	acc = acc || [ ]

	if (data.length === 0) {
		callback(acc)
	} else {

		fn(data[0], function ( ) {

			commons.async.map(
				fn, data.slice(1), callback,
				acc.concat( [Array.prototype.slice.call(arguments)] ))

		})

	}

}




module.exports = commons
